- include_vars: postgres.yml

- name: Create the directories
  file:
    state: directory
    path: "{{ item }}"
    recurse: yes
    owner: "root"
    group: "root"
  with_items:
      - "{{ docker_dir }}/{{ container_name }}"

- name: Make sure the {{ container_name }} container is created and running
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "bitnami/postgresql:15"
    pull: yes
    state: "started"
    recreate: yes
    env:
      "TZ": "{{ timezone }}"
      "POSTGRESQL_PASSWORD": "{{ postgres_password }}"
    ports: "{{ host_port }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}:/bitnami/postgresql"
    networks:
      - name: docker_network
    purge_networks: yes
    restart_policy: always
    user: "root:root"

- name: Install psycopg2-binary
  ansible.builtin.pip:
    name: psycopg2-binary

- name: Create databases
  community.postgresql.postgresql_db:
    name: "{{ item }}"
    login_host: "0.0.0.0"
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
  with_items: "{{ databases }}"

- name: Backup {{ container_name }} at 4:00 AM
  cron:
    name: "Backup {{ container_name }} at 4:00 AM"
    minute: "0"
    hour: "4"
    job: "docker exec -e PGPASSWORD=${{ postgres_password }} -t ${{ container_name }} pg_dumpall -c -U ${{ postgres_user }} > {{ docker_dir }}/{{ container_name }}/dump.sql"

- name: Start {{ container_name }} at 5:00 AM
  cron:
    name: "Start {{ container_name }} at 5:00 AM"
    minute: "0"
    hour: "5"
    job: "docker start {{ container_name }}"
