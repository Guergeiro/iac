- include_vars: vaultwarden.yml

- name: Create the directories
  file:
    state: directory
    path: "{{ item }}"
    recurse: yes
    owner: "root"
    group: "root"
  with_items:
      - "{{ docker_dir }}/{{ container_name }}/data"

- name: Make sure the {{ container_name }} container is created and running
  community.docker.docker_container:
    name: "{{ container_name }}"
    image: "vaultwarden/server:latest"
    pull: yes
    state: "started"
    recreate: yes
    env:
      "TZ": "{{ timezone }}"
      "SIGNUPS_VERIFY": "true"
      "SIGNUPS_ALLOWED": "false"
      "DISABLE_ADMIN_TOKEN": "true"
      "DOMAIN": "{{ hostname_vaultwarden }}"
      "SMTP_HOST": "{{ smtp_host }}"
      "SMTP_FROM": "{{ smtp_from }}"
      "SMTP_FROM_NAME": "{{ smtp_from_name }}"
      "SMTP_SECURITY": "{{smtp_security }}"
      "SMTP_PORT": "{{ smtp_port }}"
      "SMTP_USERNAME": "{{ smtp_username }}"
      "SMTP_PASSWORD": "{{ smtp_password }}"
      "DATABASE_URL": "{{ db_url }}"
    volumes:
      - "{{ docker_dir }}/{{ container_name }}/data:/data"
    networks:
      - name: proxy_network
      - name: postgres_network
    comparisons:
      networks: strict
    restart_policy: always
    labels:
      "traefik.enable": "true"
      "traefik.docker.network": "proxy_network"
      "traefik.http.services.vaultwarden.loadbalancer.server.port": "80"

      "traefik.http.routers.vaultwarden-https.rule": "Host(`{{ domains.vaultwarden.domain }}`)"
      "traefik.http.routers.vaultwarden-https.entrypoints": "websecure"
      "traefik.http.routers.vaultwarden-https.tls": "true"
      "traefik.http.routers.vaultwarden-https.tls.certresolver": "cloudflare"

      "traefik.http.routers.vaultwarden-admin.rule": "Host(`{{ domains.vaultwarden.domain }}`) && PathPrefix(`/admin`)"
      "traefik.http.routers.vaultwarden-admin.entrypoints": "websecure"
      "traefik.http.routers.vaultwarden-admin.tls": "true"
      "traefik.http.routers.vaultwarden-admin.middlewares": "basic-auth"

- name: Start {{ container_name }} at 5:00 AM
  cron:
    name: "Start {{ container_name }} at 5:00 AM"
    minute: "0"
    hour: "5"
    job: "docker start {{ container_name }}"
